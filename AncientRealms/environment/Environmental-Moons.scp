// Thanks To Nazgull - Modified by Jesus
// Time-, Season-, Weather- and Moonphase system

[function SetDate]
VAR.EnvironmentSecond = 0
VAR.EnvironmentMinute = 0
VAR.EnvironmentHour = 0
VAR.EnvironmentDay = 1
VAR.EnvironmentMonth = 1
VAR.EnvironmentYear = 1
VAR.EnvironmentMoonLight_1 = 13
VAR.EnvironmentMoonLight_2 = 15
VAR.EnvironmentMoonLight_3 = 15
VAR.EnvironmentMoonStatus_1 = -1
VAR.EnvironmentMoonStatus_2 = 1
VAR.EnvironmentMoonStatus_3 = 1
serv.newitem i_gold
new.p=200,200
new.map 0
new.region.season=0
new.remove

[function Date]
serv.newitem i_gold
new.attr=attr_invis | attr_move_never | attr_decay | attr_can_decay
new.p=200,200,0
new.map=0
new.timer=2
obj=<new.uid>

VAR.EnvironmentSecond = <QVAL <VAR0.EnvironmentSecond> ? 0:30>
VAR.EnvironmentMinute = <eval (<VAR0.EnvironmentMinute> + <QVAL <VAR0.EnvironmentSecond> ? 7:8>)>
if (<VAR.EnvironmentMinute> >= 60)
VAR.EnvironmentMinute = 0
VAR.EnvironmentHour = <eval <VAR0.EnvironmentHour> + 1>
// setting the light. Baselight 3..23 + {2,0,-2,0,3} + moonlight at night
doswitch <eval <VAR0.EnvironmentHour >>
VAR.EnvironmentDayLIGHT = 23 // 0
VAR.EnvironmentDayLIGHT = 23 // 1
VAR.EnvironmentDayLIGHT = 23 // 2
VAR.EnvironmentDayLIGHT = 20 // 3
VAR.EnvironmentDayLIGHT = 20 // 4
VAR.EnvironmentDayLIGHT = 16 // 5
VAR.EnvironmentDayLIGHT = 14 // 6
VAR.EnvironmentDayLIGHT = 14 // 7
VAR.EnvironmentDayLIGHT = 10 // 8
VAR.EnvironmentDayLIGHT = 10 // 9
VAR.EnvironmentDayLIGHT = 7 // 10
VAR.EnvironmentDayLIGHT = 5 // 11
VAR.EnvironmentDayLIGHT = 3 // 12
VAR.EnvironmentDayLIGHT = 5 // 13
VAR.EnvironmentDayLIGHT = 5 // 14
VAR.EnvironmentDayLIGHT = 7 // 15
VAR.EnvironmentDayLIGHT = 10 // 16
VAR.EnvironmentDayLIGHT = 10 // 17
VAR.EnvironmentDayLIGHT = 15 // 18
VAR.EnvironmentDayLIGHT = 15 // 19
VAR.EnvironmentDayLIGHT = 20 // 20
VAR.EnvironmentDayLIGHT = 20 // 21
VAR.EnvironmentDayLIGHT = 21 // 22
VAR.EnvironmentDayLIGHT = 23 // 23
enddo
doswitch <obj.SECTOR.SEASON>
begin // winter
VAR.EnvironmentDayLIGHT= <eval <VAR0.EnvironmentDayLIGHT> + 2>
obj.region.snow
end
begin // spring
VAR.EnvironmentDayLIGHT= <eval <VAR0.EnvironmentDayLIGHT>>
obj.region.dry
end
begin // summer
VAR.EnvironmentDayLIGHT= <eval <VAR0.EnvironmentDayLIGHT> - 2>
obj.region.dry
end
begin // fall
VAR.EnvironmentDayLIGHT= <eval <VAR0.EnvironmentDayLIGHT>>
obj.region.rain
end
begin // death season
VAR.EnvironmentDayLIGHT= <eval <VAR0.EnvironmentDayLIGHT> + 3>
obj.region.rain
end
enddo
if !((<VAR.EnvironmentHour> > 5) && (<VAR.EnvironmentHour> < 20)) // nighttime
VAR.EnvironmentDayLIGHT= <eval (<VAR0.EnvironmentDayLIGHT> + 3 -((<VAR0.EnvironmentMoonLight_1> + <VAR0.EnvironmentMoonLight_2> + <VAR0.EnvironmentMoonLight_3>) / 25))>
endif 

if <obj.sector.light> != <eval <VAR0.EnvironmentDayLIGHT>>
obj.REGION.LIGHT=<eval <VAR0.EnvironmentDayLIGHT>>
endif 
// //SERV.LOG daylight=<eval <VAR0.EnvironmentDayLIGHT>>

endif 
if (<VAR.EnvironmentHour> >= 24)
VAR.EnvironmentHour = 0
VAR.EnvironmentDay = <eval <VAR.EnvironmentDay> + 1>
// change moonphases
VAR.EnvironmentMoonLight_1 = <eval <VAR0.EnvironmentMoonLight_1> + <VAR0.EnvironmentMoonStatus_1>>
if (<VAR0.EnvironmentMoonLight_1> == 14)
VAR.EnvironmentMoonStatus_1 = -1
elseif  (<VAR0.EnvironmentMoonLight_1> == 0)
VAR.EnvironmentMoonStatus_1 = 1
endif 

VAR.EnvironmentMoonLight_2 = <eval <VAR0.EnvironmentMoonLight_2> + <VAR0.EnvironmentMoonStatus_2>>
if (<VAR0.EnvironmentMoonLight_2> == 26)
VAR.EnvironmentMoonStatus_2 = -1
elseif  (<VAR0.EnvironmentMoonLight_2> == 0)
VAR.EnvironmentMoonStatus_2 = 1
endif 

VAR.EnvironmentMoonLight_3 = <eval <VAR0.EnvironmentMoonLight_3> + <VAR0.EnvironmentMoonStatus_3>>
if (<VAR0.EnvironmentMoonLight_3> == 0)
VAR.EnvironmentMoonStatus_3 = 1
elseif  (<VAR0.EnvironmentMoonLight_3> == 45) && (<VAR0.EnvironmentMoonLight_2> == 7) && (<VAR0.EnvironmentMoonLight_1> == 11)
VAR.EnvironmentMoonStatus_3 = 0
elseif  (<VAR0.EnvironmentMoonLight_3> == 45) && (<VAR0.EnvironmentMoonLight_2> == 20) && (<VAR0.EnvironmentMoonLight_1> == 4)
VAR.EnvironmentMoonStatus_3 = 0
elseif  (<VAR0.EnvironmentMoonLight_3> == 45) && (<VAR0.EnvironmentMoonLight_2> == 19) && (<VAR0.EnvironmentMoonLight_1> == 3)
VAR.EnvironmentMoonStatus_3 = 0
elseif  (<VAR0.EnvironmentMoonLight_3> == 45) && (<VAR0.EnvironmentMoonLight_2> == 6) && (<VAR0.EnvironmentMoonLight_1> == 10)
VAR.EnvironmentMoonStatus_3 = 0
elseif  <VAR0.EnvironmentMoonLight_3> == 45)
VAR.EnvironmentMoonStatus_3 = -1
endif 
endif 
if (<VAR0.EnvironmentDay> >= 29)
VAR.EnvironmentDay = 1
VAR.EnvironmentMonth = <eval <VAR0.EnvironmentMonth> + 1>
endif 
if (<VAR0.EnvironmentMonth> >= 14)
VAR.EnvironmentMonth = 1
VAR.EnvironmentYear = <eval <VAR0.EnvironmentYear> + 1>
endif 

//SERV.LOG "setting default season"
doswitch <eval <VAR0.EnvironmentMonth> - 1>
obj.SetSeason 0
obj.SetSeason 0
obj.SetSeason 0
obj.SetSeason 1
obj.SetSeason 1
obj.SetSeason 1
obj.SetSeason 2
obj.SetSeason 2
obj.SetSeason 2
obj.SetSeason 3
obj.SetSeason 3
obj.SetSeason 3
obj.SetSeason 4
enddo
//SERV.LOG "<eval <VAR.EnvironmentYear>>-<eval <VAR.EnvironmentMonth>>-<eval <VAR.EnvironmentDay>> <eval <VAR.EnvironmentHour>>:<eval <VAR.EnvironmentMinute>>:<eval <VAR.EnvironmentSecond>> # ML: <eval <VAR.EnvironmentMoonLight_1>>:<eval <VAR.EnvironmentMoonLight_2>>:<eval <VAR.EnvironmentMoonLight_3>>"
// Elven territories have always spring
obj.p=2524,218,1 // Riallon
obj.map=0
//SERV.LOG "setting Riallon season"
obj.SetSeason 0
obj.region.dry

obj.p=1910,2117,1 // Ancient Realms 
//SERV.LOG "setting Ancient Realms season"
obj.SetSeason 0
obj.region.dry

obj.p=1679,2977,1 // Crystal Valley
//SERV.LOG "setting Crystal Valley season"
obj.SetSeason 0
obj.region.dry

obj.p=2151,950,1 // Faery's Forest 
//SERV.LOG "setting Faery's Forest season"
obj.SetSeason 0
obj.region.dry

// Frostpeak has always winter
obj.p=1997,44,4 // Frostgipfel
//SERV.LOG "setting Frostpeak season"
obj.SetSeason 3
obj.region.snow
obj.remove

[function SetSeason]
if <sector.season> != <eval <args>>
//SERV.LOG "old season = <sector.season>, new one <eval <args>>"
region.season = <eval <args>>
endif 

[function StringDate]
// for assembling a text output using the spyglass like
// "the 2nd day of the 1st month of Lill"
// see spyglass
doswitch <eval <VAR0.EnvironmentMonth> - 1>
begin
VAR.EnvironmentSubMonth = 1. Moon
VAR.EnvironmentMainMonth= The Hunter
end
begin
VAR.EnvironmentSubMonth = 2. Moon
VAR.EnvironmentMainMonth= The Hunter
end
begin
VAR.EnvironmentSubMonth = 3. Moon
VAR.EnvironmentMainMonth= The Hunter
end
begin
VAR.EnvironmentSubMonth = 1. Moon
VAR.EnvironmentMainMonth= The Shepard
end
begin
VAR.EnvironmentSubMonth = 2. Moon
VAR.EnvironmentMainMonth= The Shepard
end
begin
VAR.EnvironmentSubMonth = 3. Moon
VAR.EnvironmentMainMonth= The Shepard
end
begin
VAR.EnvironmentSubMonth = 1. Moon
VAR.EnvironmentMainMonth= The Artist
end
begin
VAR.EnvironmentSubMonth = 2. Moon
VAR.EnvironmentMainMonth= The Artist
end
begin
VAR.EnvironmentSubMonth = 3. Moon
VAR.EnvironmentMainMonth= The Artist
end
begin
VAR.EnvironmentSubMonth = 1. Moon
VAR.EnvironmentMainMonth= The Mermaid
end
begin
VAR.EnvironmentSubMonth = 2. Moon
VAR.EnvironmentMainMonth= The Mermaid
end
begin
VAR.EnvironmentSubMonth = 3. Moon
VAR.EnvironmentMainMonth= The Mermaid
end
begin
VAR.EnvironmentSubMonth = Moon
VAR.EnvironmentMainMonth= The Dead
end
enddo


[function f_spyglass]
StringDate
// text parts for the moon's phases
// "is full" == "is a full moon"
// "is new" == "is a new moon"
// "is setting" == "is descending"
// "is rising" == "is ascending"
//
// the moons are named Titan(14 day revelation), Timain (26 days), and Medusa(45 days)
// so there is only ONE day in a year with all three moons full, and one with all three are new;
// the latter day is in the midst of the "Phex" month, the time when dead ppl. are returning
// to the world of the living
if  (<VAR.EnvironmentMoonLight_1> == 14)
// full moon
VAR.EnvironmentTitan = is full
elseif  (<VAR.EnvironmentMoonLight_1> == 0)
// new moon
VAR.EnvironmentTitan = is new
elseif  (<VAR.EnvironmentMoonStatus_1> == 1)
// ascending moon
VAR.EnvironmentTitan = is rising
elseif  (<VAR.EnvironmentMoonStatus_1> == -1)
// descending moon
VAR.EnvironmentTitan = is setting
endif 

if (<VAR.EnvironmentMoonLight_2> == 26)
VAR.EnvironmentEros = is full
elseif  (<VAR.EnvironmentMoonLight_2> == 0)
VAR.EnvironmentEros = is new
elseif  (<VAR.EnvironmentMoonStatus_2> == 1)
VAR.EnvironmentEros = is rising
elseif  (<VAR.EnvironmentMoonStatus_2> == -1)
VAR.EnvironmentEros = is setting
endif 

if (<VAR.EnvironmentMoonLight_3> == 45)
VAR.EnvironmentMedusa= is full
elseif  (<VAR.EnvironmentMoonLight_3> == 0)
VAR.EnvironmentMedusa= is new
elseif  (<VAR.EnvironmentMoonStatus_3> == 1)
VAR.EnvironmentMedusa= is rising
elseif  (<VAR.EnvironmentMoonStatus_3> == -1)
VAR.EnvironmentMedusa= is setting
endif 

dialog d_calendar
return 0

[DIALOG d_calendar]
0,0
page 0
gumppic 0 0 5011
text 87 71 1001 0
text 54 91 1001 1
text 51 111 1001 2
text 56 131 1001 3
text 82 151 1001 4
text 77 171 1001 5
text 99 191 1001 6

[DIALOG d_calendar text]
   It is day <eval <VAR0.EnvironmentDay>>
     of <VAR.EnvironmentMainMonth>
   <eval <VAR0.EnvironmentYear>> year after the flood 
     Titan <VAR.EnvironmentTitan>,
   Eros <VAR.EnvironmentEros>,
  Medusa <VAR.EnvironmentMedusa>.

[DIALOG d_calendar button]
[EOF]

